@model BookStore.Models.Book

@{
    ViewBag.Title = "Create";
}

<style>
    .width-text-box {
        width: 160px;
    }
</style>



@using (Html.BeginForm("Create", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <form action="/Book/Create" enctype="multipart/form-data" method="post">
        <input name="__RequestVerificationToken" type="hidden" value="gF4ls0fY8IfmfSrbee6nwn0drbbgSWoMjdJPOq0xpyC5bgKQK0QholA-ldSMEHYfKafKDPnJCWJeHYLrcIPQ9wCpIiDzZN5Q95vunTfGo6w1" />
        <div class="form-horizontal">
            <h2>Thêm sách mới @ViewBag.Message </h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, "Chủ đề", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control width-text-box" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Images, null, new { type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control width-text-box" } })
                    @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control, @cols = 35, @rows = 3" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    <script>
                        CKEDITOR.replace("Description")
                    </script>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AuthorID, "Tác giả", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AuthorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Thêm mới" class="btn btn-success" />
                    <input type="reset" value="Làm lại" class="btn btn-danger" />
                </div>
            </div>
        </div>
    </form>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
